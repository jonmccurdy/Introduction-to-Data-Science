diff(range(x)()
diff(range(x))
diff(range(x))
sd(x)
sd(c(847, 2135, 1822, 769, 2025, 1462, 1888, 855, 1510, 1540, 1209, 539))
4505/1137.5
college_data
(1888 - 1665)/1137.5
(900 - 1665)/1137.5
#| echo: FALSE
# Attendance values
attendance <- c(847, 2135, 1822, 769, 2025, 1462, 1888, 855, 1510, 1540, 1209, 539, 5044)
# Plot histogram with counts (default), store histogram object to access break points
hist_obj <- hist(attendance,
breaks = 5,
main = "Histogram of Attendance with Density Line",
xlab = "Average Attendance",
ylab = "Frequency")
# Add density line scaled to match the count-based histogram
density_curve <- density(attendance)
# Rescale density to match histogram count scale
scale_factor <- max(hist_obj$counts) / max(density_curve$y)
abline(v=mean(attendance), col="red", lwd=2)
abline(v=median(attendance), col="blue", lwd=2)
lines(density_curve$x, density_curve$y * scale_factor,
col = "black", lwd = 2)
#| echo: false
#| warning: false
library(knitr)
library(kableExtra)
# Create the data frame
college_data <- data.frame(
College = c("Canisius", "Fairfield", "Iona", "Manhattan", "Marist",
"Merrimack", "Mount St. Mary's", "Niagara", "Quinnipiac",
"Rider", "Sacred Heart", "Saint Peter's", "Siena"),
Average_Attendance = c(847, 2135, 1822, 769, 2025, 1462,
1888, 855, 1510, 1540, 1209, 539, 5044),
Student_Enrollment = c(2630, 6298, 3720, 3195, 6657, 5505, 2240, 3763,
9744, 3693, 6524, 3673, 3623),
stringsAsFactors = FALSE
)
# Render the table
kable(college_data,
col.names = c("College", "Mean Attendance", "Student Enrollment"))
#| echo: FALSE
enrollment <- c(2630,6298,3720,3195,6657,5505,2240,3763,9744,3693,6524,3673,3623)
model <- lm(attendance ~ enrollment)
plot(enrollment, attendance, xlab="Student Enrollment", ylab="Average Attendance")
abline(model)
#| echo: FALSE
enrollment <- c(2630,6298,3720,3195,6657,5505,2240,3763,9744,3693,6524,3673,3623)
model <- lm(attendance ~ enrollment)
plot(enrollment, attendance, xlab="Student Enrollment", ylab="Average Attendance")
abline(model, col="red", lwd=2)
#| echo: false
#| warning: false
library(knitr)
library(kableExtra)
# Create the data frame
college_data <- data.frame(
College = c("Canisius", "Fairfield", "Iona", "Manhattan", "Marist",
"Merrimack", "Mount St. Mary's", "Niagara", "Quinnipiac",
"Rider", "Sacred Heart", "Saint Peter's", "Siena"),
Average_Attendance = c(847, 2135, 1822, 769, 2025, 1462,
1888, 855, 1510, 1540, 1209, 539, 5044),
Student_Enrollment = c(2630, 6298, 3720, 3195, 6657, 5505, 2240, 3763,
9744, 3693, 6524, 3673, 3623),
Religious = c("Catholic", "Catholic", "Catholic", "Catholic", "Not Catholic",
"Catholic", "Catholic", "Catholic", "Not Catholic", "Not Catholic",
"Catholic", "Catholic", "Catholic"),
State = c("New York", "Connecticut", "New York", "New York", "New York",
"Massachusetts", "Maryland", "New York", "Connecticut", "New Jersey",
"Connecticut", "New Jersey", "New York"),
stringsAsFactors = FALSE
)
# Render the table
kable(college_data,
col.names = c("College", "Mean Attendance", "Student Enrollment", "Religious", "State"))
#| echo: false
MAAC <- data.frame(
College = c("Canisius", "Fairfield", "Iona", "Manhattan", "Marist",
"Merrimack", "Mount St. Mary's", "Niagara", "Quinnipiac",
"Rider", "Sacred Heart", "Saint Peter's", "Siena"),
Average_Basketball_Attendance = c(847, 2135, 1822, 769, 2025, 1462,
1888, 855, 1510, 1540, 1209, 539, 5044),
Student_Enrollment = c(2630, 6298, 3720, 3195, 6657, 5505, 2240, 3763,
9744, 3693, 6524, 3673, 3623),
Religious = c("Catholic", "Catholic", "Catholic", "Catholic", "Not Catholic",
"Catholic", "Catholic", "Catholic", "Not Catholic", "Not Catholic",
"Catholic", "Catholic", "Catholic"),
State = c("New York", "Connecticut", "New York", "New York", "New York",
"Massachusetts", "Maryland", "New York", "Connecticut", "New Jersey",
"Connecticut", "New Jersey", "New York"),
stringsAsFactors = FALSE
)
barplot(table(MAAC$Religious), main="Barplot for Religion")
barplot(table(MAAC$State), main="Barplot for States")
table(MAAC$State)
table(MAAC$Religious)
#| echo: false
MAAC <- data.frame(
College = c("Canisius", "Fairfield", "Iona", "Manhattan", "Marist",
"Merrimack", "Mount St. Mary's", "Niagara", "Quinnipiac",
"Rider", "Sacred Heart", "Saint Peter's", "Siena"),
Average_Basketball_Attendance = c(847, 2135, 1822, 769, 2025, 1462,
1888, 855, 1510, 1540, 1209, 539, 5044),
Student_Enrollment = c(2630, 6298, 3720, 3195, 6657, 5505, 2240, 3763,
9744, 3693, 6524, 3673, 3623),
Religious = c("Catholic", "Catholic", "Catholic", "Catholic", "Not Catholic",
"Catholic", "Catholic", "Catholic", "Not Catholic", "Not Catholic",
"Catholic", "Catholic", "Catholic"),
State = c("New York", "Connecticut", "New York", "New York", "New York",
"Massachusetts", "Maryland", "New York", "Connecticut", "New Jersey",
"Connecticut", "New Jersey", "New York"),
stringsAsFactors = FALSE
)
barplot(table(MAAC$Religious), main="Barplot for Religion")
barplot(table(MAAC$State), main="Barplot for States")
aggregate(MAAC$Average_Basketball_Attendance, by=list(MAAC$Religious), mean)
#| echo: false
#| warning: false
library(knitr)
tbl <- aggregate(MAAC$Average_Basketball_Attendance,
by = list(State = MAAC$State), mean)
kable(tbl, col.names = c("State", "Mean Attendance"))
(71400-70000)/70000
devtools::install_github("LukePapayoanou/MSMU" ,force=TRUE)
mean(c(4,8,2,0,13,7,3,5,7,8))
mean(c(4,8,2,0,10,7,3,5,7,8))
mean(c(4,8,2,5,13,7,3,5,7,8))
mean(c(4,8,2,4,13,7,3,5,7,8))
mean(c(4,8,2,3,13,7,3,5,7,8))
table(c(4,8,2,3,13,7,3,5,7,8))
table(c(4,8,2,3,11,7,3,5,9,8))
c(80, 90, 75, 100, 92)
mean(c(80, 90, 75, 100, 92))
mean(c(80, 90, 75, 100, 94))
mean(c(80, 90, 75, 100, 95))
mean(c(80, 90, 75, 97, 93))
mean(c(0, 80, 90, 75, 97, 93))
mean(c(10, 80, 90, 75, 97, 93))
mean(c(5, 80, 90, 75, 97, 93))
mean(c(4, 80, 90, 75, 97, 93))
mean(c(3, 80, 90, 75, 97, 93))
mean(c(80, 90, 75, 97, 93))
mean(c(3,2,0,1,8,4,3,2))
mean(c(3,2,0,1,8,4,3,2,4))
c(1,2,3,4)/4 * 0.5
mean(c(80, 77, 93, 95, 63, 75, 84, 82, 90, 100, 61))
mean(c(80, 77, 93, 95, 63, 75, 84, 82, 90, 100, 62))
mean(c(80, 77, 93, 95, 63, 75, 84, 82, 90, 100, 63))
mean(c(80, 77, 93, 95, 63, 75, 84, 82, 90, 100, 63, 82))
median(c(80, 77, 93, 95, 63, 75, 84, 82, 90, 100, 63, 82))
median(c(80, 77, 93, 95, 63, 75, 84, 82, 90, 100, 64, 81))
median(c(80, 77, 93, 95, 63, 75, 84, 82, 90, 100, 62, 81))
mean(c(80, 77, 93, 95, 63, 75, 84, 82, 90, 100, 62, 81))
mean(c(80, 77, 93, 95, 63, 75, 84, 82, 91, 100, 63, 81))
median(c(80, 77, 93, 95, 63, 75, 84, 82, 91, 100, 63, 81))
median(c(80, 77, 93, 95, 63, 75, 85, 82, 91, 99, 63, 81))
mean(c(80, 77, 93, 95, 63, 75, 85, 82, 91, 99, 63, 81))
c(10, 14, 12, 17, 14, 15, 28, 15)
mean(c(10, 14, 12, 17, 14, 15, 28, 15))
mean(c(10, 14, 12, 17, 14, 15, 28, 15, 13, 18, 19, 11))
mean(c(10, 14, 12, 17, 14, 15, 30, 15, 13, 18, 19, 11))
mean(c(10, 14, 12, 17, 14, 15, 33, 15, 13, 18, 19, 11))
mean(c(10, 14, 12, 17, 14, 15, 34, 15, 13, 18, 19, 11))
mean(c(15, 42, 37, 20, 18, 19, 56, 22, 21, 19, 300, 25))
median(c(15, 42, 37, 20, 18, 19, 56, 22, 21, 19, 300, 25))
table(c(15, 42, 37, 20, 18, 19, 56, 22, 21, 19, 300, 25))
table(c(15, 42, 37, 20, 18, 19, 56, 22, 21, 19, 25))
mean(c(15, 42, 37, 20, 18, 19, 56, 22, 21, 19, 25))
median(c(15, 42, 37, 20, 18, 19, 56, 22, 21, 19, 25))
mean(c(7,6,8,5,4,9,6,8,12,7))
range(c(7,6,8,5,4,9,6,8,12,7))
sd(c(7,6,8,5,4,9,6,8,12,7))
(12-7.2)/2.25
mean(c(8,6,9))
mean(c(15,20,18))
mean(c(8,15,6,18,12,10,9,20))
4 + 8 + 2 + 3 + 11 + 7 + 3 + 5 + 9 + 8
c(4 , 8 , 2 , 3 , 11 , 7 ,3 , 5 , 9 , 8)
mean(c(4 , 8 , 2 , 3 , 11 , 7 ,3 , 5 , 9 , 8))
sort(c(4 , 8 , 2 , 3 , 11 , 7 ,3 , 5 , 9 , 8))
16 + 9 + 9 + 4 + 1 + 1 +  4+ 4+  9 + 25
82/9
sqrt(9.11)
flavors <- c("berry", "mango", "banana")
sales <- c(12, 15, 9)
protein_added <- c(TRUE, FALSE, TRUE)
mistake <- c(sales, "error")
typeof(flavors)
typeof(sales)
typeof(protein_added)
typeof(mistake)
mistake
sum(protein_added)
protein_added
sum(protein_added)
prices <- c(4.25, 0, 3.75, 4.00, 5.00, 2.75, 3.00)
prices
prices * 1.25
mileage <- c(6, 5, 6, 2, 4, 12, 5)
mileage
mileage <- c(6, 5, 6, 2, 4, 12, 5)
mileage
mileage == 5
mileage > 4
mileage != 6
reading <- c(20, 35, 28, 40, 30, 33, 45)
reading
sum(reading)
mean(reading)
median(reading)
reading <- c(20, 35, 28, 40, 30, 35, 45)
reading
sum(reading)
mean(reading)
median(reading)
sd(reading)
range(reading)
diff(range(reading))
sleep <- c(6.5, 7, 8, 6, 7.5, 9, 6.5)
sleep
sleep[2]
sleep[7]
sleep[c(2,4,6)]
mean(sleep[c(2,3,7)])
fruits <- c("Apple", "Banana", "Cherry")
fruits
fruits <- c("Apple", "Banana", "Cherry")
typeof(fruits)
fruits
fruits_factor <- factor(fruits)
typeof(fruits)
fruits
fruits <- c("Apple", "Banana", "Cherry")
typeof(fruits)
fruits
fruits_factor <- factor(fruits)
typeof(fruits_factor)
fruits_factor
classification <- c("Freshman", "Sophmore", "Junior", "Senior")
classification
classification_factor <- factor(classification)
classification
classification <- c("Freshman", "Sophmore", "Junior", "Senior")
classification
classification_factor <- factor(classification, ordered=TRUE)
classification_factor
classification_factor <- factor(classification, ordered=TRUE, levels=c("Freshman", "Sophmore", "Junior", "Senior"))
classification_factor
reading
sum(reading)/length(reading)
?cut
c(1,2,3,4)/4 * 0.5
mean(c(3, 6, 4, 7, 1))
mean(c(3, 6, 4, 7, 0))
mean(c(8,5,2,7,2,1))
mean(c(8,5,2,7,2,0))
mean(c(8,5,9,7,4))
mean(c(8,5,9,7,5))
mean(c(8,5,9,7,6))
mean(c(8,5,11,8,6))
mean(c(8,7,11,8,6))
mean(c(4,2,9,4,0))
mean(c(4,2,1,4,0))
mean(c(4,2,-1,4,0))
mean(c(4,2,-1,4,1))
median(c(4,6,2,0,9,4))
median(c(4,6,2,0,9,5))
median(c(10,12,8,7,10,17))
median(c(10,12,8,7,12,17))
median(c(3, 6, 2, 8, 9))
(42-52)/4
(12 + 7)/3 - (8/3)^(2+1)
(10 + 14 + 12 + 17 + 14 + 15 + 35 + 15 + 13 + 18 + 19 + 11)
192/12
# Exercise 1: Your Name
# 1
expr1 <- (2 * (3 + 5) / 3)^2 - (4 + 3) / (6 - 2)
expr1
# 2
expr2 <- 9^(1/2) * (7 + 2)^2 - 15 / 3
expr2
# 3
expr3 <- 4 * (2^3 + 1) / (5 - 2)^2 + 10
expr3
# 4
expr4 <- 2^(4 * 2) - 6 * (9 - 7) + 27 / 4
expr4
(12 + 7)/3 - (8/2)^(2 + 1)
((8 + 2^3)* 5 - 3^(2^5) + 12)/(4^(1/2))
seq(from=0, to=4.0, by=.1)
seq(from=0, to=4.0, by=.1)
seq(from=0, to=4.0, by=.1)
seq(from=0, to=4.0, by=.1)
seq(from=0, to=4.0, by=.1)
seq(from=0, to=4.0, by=.1)
seq(from=0, to=4.0, by=.1)
seq(from=0, to=4.0, by=.1)
seq(from=0, to=4.0, by=.1)
seq(4, 0, by=-.1)
0:4
4:0
4:0 by=0.1
#Emmit surveys his friends regarding their favorite fruit, and determines that 7 of them like apples, 4 like bananas, 3 like oranges, and 1 likes pineapple. How can he display this information using the rep() function?
rep(c("apples", "bananas", "oranges", "pineapple"), times=c(7, 4, 3, 1))
?rep
rep(c("apples", "bananas", "oranges", "pineapple"), each=c(7, 4, 3, 1))
letters
LETTERS[c(5,13,13,9,20)]
letters[c(19,13,15,15,20,8,9,5,19)]
paste(LETTERS[c(5,13,13,9,20)])
paste0(LETTERS[c(5,13,13,9,20)])
# Emmit has been operating the smoothie stand for a few weeks now and wants to calculate how many smoothies of each flavor he has sold. Help him create a named vector if he has sold 42 Strawberry, 37 Mango, and 28 Pineapple smoothies.
amount_sold <- c(42,37,28)
amount_sold
names(amount_sold)
names(amount_sold) <- c("Strawberry", "Mango", "Pineapple")
amount_sold
amount_sold <- c("Strawberry" = 42, "Mango" = 37, "Pineapple" = 28)
amount_sold
flavors <- c("Mango Madness", "Berry Blast", "Peach Punch", "Pineapple Punch",
"Acai Antioxidant", "Tropical Berry Twist", "Citrus Crush",
"Berry Goddess", "Chocolate Crush", "Vanilla Velvet")
#The smoothie stand has the following flavors. How can he display the flavors that start with Berry, end with Crush, or have two consecutive vowels.
grep("^Berry", flavors)
flavors[grep("^Berry", flavors)]
grep("Crush$", flavors)
flavors[grep("Crush$", flavors)]
grep("[aeiou][aeiou]", flavors)
flavors[grep("[aeiou][aeiou]", flavors)]
grep("t.", flavors)
flavors[grep("t.", flavors)]
sales <- c(12, 5, 9, 15, 7, 3, 10, 20, 7, 6)
#Emmit has calculated the number of he has sold for each of the past 10 days. How many days did he sell less than 7.5 smoothies? How many days did he sell either less than 5 or greater than 15 smoothies?
sales < 7.5
sum(sales < 7.5)
sales[sales < 7.5]
sales < 5 | sales > 15
sum(sales < 5 | sales > 15)
sales[sales < 5 | sales > 15]
# Emmit wants to run a promotion where he randomly selects smoothie flavors to feature each day. Help him write R code which randomly picks 3 flavors to promote each day.
flavors <- c("Mango Madness", "Berry Blast", "Peach Punch", "Pineapple Punch",
"Acai Antioxidant", "Tropical Berry Twist", "Citrus Crush",
"Berry Goddess", "Chocolate Crush", "Vanilla Velvet")
samples(flavors, 3)
sample(flavors, 3)
sample(flavors, 3, replace=TRUE)
sample(flavors, 3, replace=TRUE)
sample(flavors, 3, replace=TRUE)
set.seed(123)
sample(flavors, 3)
set.seed(123)
sample(flavors, 3)
sales <- c(12, 5, 9, 15, 7, 3, 10, 20, 7, 6)
# Emmit has calculated the number of he has sold for each of the past 10 days. Using the functions in this section determine which days had sales greater than or equal to 15 and if the sales on a day matched a previous day’s total.
which(sales >= 15)
sales[which(sales >= 15)]
duplicated(sales)
sales[duplicated(sales)]
which(duplicated(sales))
0.25:4.5
?rep
letters
letters
letters
letters
LETTERS
flavors <- c("Mango Madness", "Berry Blast", "Peach Punch", "Pineapple Punch",
"Acai Antioxidant", "Tropical Berry Twist", "Citrus Crush",
"Berry Goodness", "Chocolate Crush", "Vanilla Velvet")
flavors[grep("[aeiou][aeiou]", flavors)]
grep("[aeiou][aeiou]", flavors)
amount_sold
amount_sold["Mango"]
30*2.8333333
83/36
85/36
18^2
36 + 4 + 16 + 1 + 4 + 1 + 324 + 1 + 9 + 4 + 9 + 25
434/(12-1)
sqrt(39.45)
mean(c(10,14,12,17,14,15,34,15,13,18,19,11))
median(c(10,14,12,17,14,15,34,15,13,18,19,11))
sd(c(10,14,12,17,14,15,34,15,13,18,19,11))
(7-16)/6.28
2/6
1.7/6
1.8/6
x <- 6
typeof(x)
y <- "Hello"
typeof(y)
z <- TRUE
typeof(z)
x <- c(5, 7, 9, 8)
x
typeof(x)
y <- c("Hello", 4, 5, 6, 7)
typeof(y)
y
y <- c("Hello", "My", "Name", "is")
y
x
x == 7
x > 7
mean(x)
sum(x)
median(x)
sd(x)
sqrt(x)
mean(1, 80, 57, 45, 89, 64, 35, 86)
mean(c(1, 80, 57, 45, 89, 64, 35, 86))
x
x[1]
x[2]
x[3]
x[8]
x[4]
x[c(1,3)]
y <- c("Bronze", "Silver", "Gold")
typeof(y)
factor(y)
factor(y, ordered=TRUE)
factor(y, ordered=TRUE, levels=c("Bronze", "Silver", "Gold"))
z <- factor(y, ordered=TRUE, levels=c("Bronze", "Silver", "Gold"))
typeof(z)
?mean
c(10,4,3,9,-3,9,5,3,2,4)
mean(c(10,4,3,9,-3,9,5,3,2,4))
q1 <- c(10,4,3,9,-3,9,5,3,2,4)
mean(q1)
median(x)
mode(x)
sd(x)
median(q1)
sd(q1)
range(q1)
diff(range(q1))
x >= mean(q1)
q1 >= mean(q1)
q1
q1 + 10
sq(q1 + 10)
sd(q1 + 10)
sqrt(q1)
q1[3]
q1 > mean(q1)
q1[c(1,4,6,7)]
q1[q1 > mean(q1)]
typeof(3)
typeof("Hello")
typeof(FALSE)
c(5, 7, 9, 8)
x <- c(5, 7, 9, 8)
x
typeof(x)
y <- c("Hello", "My", "Name", "Is", "...")
y
typeof(y)
z <- c("Hello", 3, 4, 5, 6)
z
x
x == 7
x >= 8
mean(x)
median(x)
mode(x)
sd(x)
sum(x)
sqrt(x)
log(x)
min(x)
max(x)
range(x)
mean(1, 50, 58, 35, 97, 68, 7574)
mean(c(1, 50, 58, 35, 97, 68, 7574))
x
x[1]
x[2]
x[c(1,3)]
c("Gold", "Silver", "Bronze")
medals <- c("Gold", "Silver", "Bronze")
medals
factor(medals)
factor(medals, ordered=TRUE)
factor(medals, ordered=TRUE, levels=c("Bronze", "Silver", "Gold"))
?sd
?mean
c(10, 4, 3, 9, -3, 9, 5, 3, 2, 4)
mean( c(10, 4, 3, 9, -3, 9, 5, 3, 2, 4) )
x <- c(10, 4, 3, 9, -3, 9, 5, 3, 2, 4)
mean(x)
x
median(x)
sd(x)
x + 10
sd(x + 10)
mean(x + 10)
diff(range(x))
range(x)
sqrt(x)
x
x[3]
x[4]
x[c(1,2,4)]
x > 4.6
x > mean(x)
x[c(1,4,6,7)]
x[x > mean(x)]
197 + 67
